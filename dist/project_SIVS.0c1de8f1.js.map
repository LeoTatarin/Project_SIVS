{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["// -------------------------------\n// COMUNICAÇÃO\n// -------------------------------\n// Pegando os elementos do HTML\nconst textarea = document.getElementById(\"mensage\"); // Campo de texto da mensagem\nconst btnAdd = document.getElementById(\"btnAdd\"); // Botão \"Adicionar comunicação\"\nconst listaMensagens = document.getElementById(\"mensagens\"); // Área onde as mensagens serão exibidas\n// Evento que é disparado sempre que o usuário digita no textarea\ntextarea.addEventListener(\"input\", function() {\n    // Se o campo estiver vazio (ou só com espaços), desabilita o botão\n    btnAdd.disabled = textarea.value.trim() === \"\";\n});\n// Evento que é disparado quando o usuário clica no botão\nbtnAdd.addEventListener(\"click\", function() {\n    // Pega o texto digitado, removendo espaços extras no começo e fim\n    const texto = textarea.value.trim();\n    // Só adiciona a mensagem se o campo não estiver vazio\n    if (texto !== \"\") {\n        // Cria um novo elemento <div> para a nova mensagem\n        const novaMensagem = document.createElement(\"div\");\n        // Adiciona as classes Bootstrap que deixam o estilo igual ao exemplo\n        novaMensagem.classList.add(\"container\", \"border\", \"rounded\", \"m-0\", \"mb-2\");\n        // Define o conteúdo HTML da nova mensagem\n        novaMensagem.innerHTML = `\n            <b>--nome de usuario--</b>\n            <p class=\"mb-0 w-100\">${texto}</p>\n        `;\n        // Adiciona a nova mensagem no final da lista\n        listaMensagens.appendChild(novaMensagem);\n        // Limpa o campo de texto para o usuário digitar outra mensagem\n        textarea.value = \"\";\n        // Desabilita o botão novamente até que o usuário digite algo novo\n        btnAdd.disabled = true;\n    }\n});\n// -------------------------------\n// SOLICITAÇÃO DE PEÇAS (novo trecho)\n// -------------------------------\n// pega os elementos\nconst btnAdicionar = document.getElementById(\"btn-adicionar\");\nconst formPeca = document.getElementById(\"form-peca\");\nconst tabela = document.getElementById(\"tabela-pecas\");\n// quando clicar no botão, mostra o formulário\nif (btnAdicionar) btnAdicionar.addEventListener(\"click\", ()=>{\n    formPeca.style.display = \"block\"; // exibe o form\n    btnAdicionar.style.display = \"none\"; // esconde o botão\n});\n// quando enviar o formulário\nif (formPeca) formPeca.addEventListener(\"submit\", (event)=>{\n    event.preventDefault(); // evita recarregar a página\n    // pega os valores digitados\n    const nome = document.getElementById(\"nome\").value;\n    const quantidade = document.getElementById(\"quantidade\").value;\n    const partnumber = document.getElementById(\"partnumber\").value;\n    // cria uma nova linha <tr>\n    const novaLinha = document.createElement(\"tr\");\n    // insere as células <td>\n    novaLinha.innerHTML = `\n            <td style=\"padding:8px;\">${nome}</td>\n            <td style=\"padding:8px;\">${quantidade}</td>\n            <td style=\"padding:8px;\">${partnumber}</td>\n        `;\n    // adiciona a linha na tabela\n    tabela.appendChild(novaLinha);\n    // limpa o formulário\n    formPeca.reset();\n    // esconde o formulário e mostra o botão de novo\n    formPeca.style.display = \"none\";\n    btnAdicionar.style.display = \"block\";\n});\n// -------------------------------\n// UPLOAD DE ARQUIVOS\n// -------------------------------\nconst btnArquivo = document.getElementById(\"btn-arquivo\");\nconst formArquivo = document.getElementById(\"form-arquivo\");\nconst tabelaArquivos = document.getElementById(\"tabela-arquivos\");\n// mostrar formulário\nbtnArquivo.addEventListener(\"click\", ()=>{\n    formArquivo.style.display = \"block\";\n    btnArquivo.style.display = \"none\";\n});\n// ao enviar o formulário\nformArquivo.addEventListener(\"submit\", (event)=>{\n    event.preventDefault();\n    const fileInput = document.getElementById(\"fileInput\");\n    const descricao = document.getElementById(\"descricaoArquivo\").value.trim();\n    if (fileInput.files.length > 0 && descricao) {\n        const arquivo = fileInput.files[0]; // pega o arquivo enviado\n        const nomeArquivo = arquivo.name;\n        // cria uma URL temporária para permitir download\n        const urlDownload = URL.createObjectURL(arquivo);\n        // cria a nova linha da tabela\n        const novaLinha = document.createElement(\"tr\");\n        novaLinha.innerHTML = `\n            <td colspan=\"5\" style=\"padding:8px;\">${nomeArquivo}</td>\n            <td colspan=\"10\" style=\"padding:8px;\">${descricao}</td>\n            <td colspan=\"1\" style=\"padding:8px;\">\n            <a href=\"${urlDownload}\" download=\"${nomeArquivo}\" style=\"padding:8px;\">\n            \\u{2B07}\\u{FE0F}\n            </a>\n            </td>\n        `;\n        // adiciona na tabela\n        tabelaArquivos.appendChild(novaLinha);\n        // limpa e esconde formulário\n        formArquivo.reset();\n        formArquivo.style.display = \"none\";\n        btnArquivo.style.display = \"block\";\n    }\n});\n// -------------------------------\n// ASSINATURA CLIENTE COM VALIDAÇÃO, MODAL E DESABILITAÇÃO\n// -------------------------------\n// elementos do DOM\nconst btnAssCliente = document.getElementById(\"btn-ass-cliente\");\nconst btnAssCliente2 = document.getElementById(\"btn-ass-cliente2\");\nconst formCliente = document.getElementById(\"form-cliente\");\nconst btnSalvarCliente = document.getElementById(\"btn-salvar-cliente\");\nconst btnLimparCliente = document.getElementById(\"btn-limpar-cliente\");\nconst imgCliente = document.getElementById(\"img-cliente\");\nconst canvas = document.getElementById(\"canvas-cliente\");\nconst ctx = canvas.getContext(\"2d\");\n// configurar traço do canvas\nctx.lineWidth = 2;\nctx.lineCap = 'round';\nctx.strokeStyle = '#000';\nlet desenhando = false;\nlet assinaturaPendente = null; // guarda dados temporários\n// garantir que modal comece escondido ao carregar a página\nwindow.addEventListener(\"load\", ()=>{\n    const modal = document.getElementById(\"modal-confirmacao\");\n    if (modal) modal.style.display = \"none\";\n    assinaturaPendente = null;\n});\n// mostrar formulário ao clicar no botão\nbtnAssCliente.addEventListener(\"click\", ()=>{\n    formCliente.style.display = \"block\";\n    btnAssCliente.style.display = \"none\";\n});\n// iniciar desenho\ncanvas.addEventListener(\"mousedown\", iniciar);\ncanvas.addEventListener(\"touchstart\", iniciar);\nfunction iniciar(e) {\n    desenhando = true;\n    ctx.beginPath();\n    ctx.moveTo(getX(e), getY(e));\n    e.preventDefault();\n}\n// desenhar\ncanvas.addEventListener(\"mousemove\", desenhar);\ncanvas.addEventListener(\"touchmove\", desenhar);\nfunction desenhar(e) {\n    if (!desenhando) return;\n    ctx.lineTo(getX(e), getY(e));\n    ctx.stroke();\n    e.preventDefault();\n}\n// parar desenho\ncanvas.addEventListener(\"mouseup\", parar);\ncanvas.addEventListener(\"mouseleave\", parar);\ncanvas.addEventListener(\"touchend\", parar);\nfunction parar() {\n    desenhando = false;\n}\n// pegar coordenadas do mouse ou touch\nfunction getX(e) {\n    if (e.touches) return e.touches[0].clientX - canvas.getBoundingClientRect().left;\n    return e.clientX - canvas.getBoundingClientRect().left;\n}\nfunction getY(e) {\n    if (e.touches) return e.touches[0].clientY - canvas.getBoundingClientRect().top;\n    return e.clientY - canvas.getBoundingClientRect().top;\n}\n// limpar canvas\nbtnLimparCliente.addEventListener(\"click\", ()=>{\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    document.getElementById(\"nomeCliente\").value = \"\";\n});\n// IDs dos campos obrigatórios\nconst camposObrigatorios = [\n    {\n        id: \"problema\",\n        label: \"Problema\"\n    },\n    {\n        id: \"realizado\",\n        label: \"Servi\\xe7o Realizado\"\n    },\n    {\n        id: \"sos_causa\",\n        label: \"Causa SOS\"\n    },\n    {\n        id: \"sos_obs\",\n        label: \"Observa\\xe7\\xf5es SOS\"\n    },\n    {\n        id: \"obs_entrada\",\n        label: \"Observa\\xe7\\xf5es de Entrada\"\n    },\n    {\n        id: \"hora_entrada\",\n        label: \"Hora de Entrada\"\n    },\n    {\n        id: \"hora_saida\",\n        label: \"Hora de Sa\\xedda\"\n    },\n    {\n        id: \"tempo_viagem\",\n        label: \"Tempo de Viagem\"\n    },\n    {\n        id: \"kms_rodados\",\n        label: \"KMs Rodados\"\n    }\n];\n// modal\nconst modal = document.getElementById(\"modal-confirmacao\");\nconst modalTexto = document.getElementById(\"modal-texto\");\nconst modalCancelar = document.getElementById(\"modal-cancelar\");\nconst modalConfirmar = document.getElementById(\"modal-confirmar\");\nfunction abrirModal(camposVazios) {\n    let texto = \"Deseja confirmar assinatura?\";\n    if (camposVazios.length > 0) texto += \"<br>Os seguintes campos n\\xe3o foram preenchidos:<br><ul>\" + camposVazios.map((c)=>`<li>${c}</li>`).join('') + \"</ul>\";\n    modalTexto.innerHTML = texto;\n    modal.style.display = \"flex\";\n}\nfunction fecharModal() {\n    modal.style.display = \"none\";\n    assinaturaPendente = null;\n}\nmodalCancelar.addEventListener(\"click\", fecharModal);\nmodalConfirmar.addEventListener(\"click\", ()=>{\n    if (assinaturaPendente) salvarAssinatura(assinaturaPendente.nome, assinaturaPendente.dataURL);\n    fecharModal();\n});\n// clique no botão salvar assinatura\nbtnSalvarCliente.addEventListener(\"click\", ()=>{\n    const nome = document.getElementById(\"nomeCliente\").value.trim();\n    if (!nome) {\n        alert(\"Digite o nome do respons\\xe1vel!\");\n        return;\n    }\n    const camposVazios = camposObrigatorios.filter((c)=>!document.getElementById(c.id).value.trim()).map((c)=>c.label);\n    const dataURL = canvas.toDataURL();\n    assinaturaPendente = {\n        nome,\n        dataURL\n    };\n    abrirModal(camposVazios); // abre modal, confirma ou cancela\n});\n// função que realmente salva assinatura\nfunction salvarAssinatura(nome, dataURL) {\n    imgCliente.src = dataURL;\n    imgCliente.alt = \"Assinatura de \" + nome;\n    imgCliente.style.display = \"block\";\n    let info = document.getElementById(\"info-ass-cliente\");\n    if (!info) {\n        info = document.createElement(\"div\");\n        info.id = \"info-ass-cliente\";\n        info.style.marginTop = \"5px\";\n        imgCliente.parentElement.appendChild(info);\n    }\n    const agora = new Date();\n    const dataHoraFormatada = agora.toLocaleString();\n    info.textContent = `Assinatura de ${nome} salva em ${dataHoraFormatada}`;\n    // esconder formulário e desabilitar botões de assinatura\n    formCliente.style.display = \"none\";\n    btnAssCliente.disabled = true;\n    btnAssCliente2.disabled = true;\n    btnAssCliente.style.display = \"none\";\n    btnAssCliente2.style.display = \"none\";\n    // DESABILITAR CAMPOS VERIFICADOS, mantendo os valores\n    camposObrigatorios.forEach((campo)=>{\n        const el = document.getElementById(campo.id);\n        if (el) el.disabled = true;\n    });\n    // DESABILITAR BOTÃO DE SALVAR OS\n    const btnSalvarOS = document.getElementById(\"salvar_os\");\n    if (btnSalvarOS) btnSalvarOS.disabled = true;\n}\n// -------------------------------\n// ASSINATURA TECNICO\n// -------------------------------\nconst btnAssTecnico = document.getElementById(\"btn-ass-tecnico\");\nconst btnAssTecnico2 = document.getElementById(\"btn-ass-tecnico2\");\nconst imgTecnico = document.getElementById(\"img-tecnico\");\nbtnAssTecnico.addEventListener(\"click\", ()=>{\n    // exibe a assinatura do técnico\n    imgTecnico.style.display = \"block\";\n    // cria ou atualiza o texto com data/hora\n    let infoTec = document.getElementById(\"info-ass-tecnico\");\n    if (!infoTec) {\n        infoTec = document.createElement(\"div\");\n        infoTec.id = \"info-ass-tecnico\";\n        infoTec.style.marginTop = \"5px\";\n        imgTecnico.parentElement.appendChild(infoTec);\n    }\n    const agora = new Date();\n    const dataHoraFormatada = agora.toLocaleString(); // ex: 27/08/2025 09:30:15\n    infoTec.textContent = `Assinatura do t\\xe9cnico registrada em ${dataHoraFormatada}`;\n    // opcional: desabilita o botão para não clicar novamente\n    btnAssTecnico.style.display = \"none\";\n    btnAssTecnico2.style.display = \"none\";\n});\n\n//# sourceMappingURL=project_SIVS.0c1de8f1.js.map\n","// -------------------------------\r\n// COMUNICAÇÃO\r\n// -------------------------------\r\n\r\n// Pegando os elementos do HTML\r\nconst textarea = document.getElementById(\"mensage\"); // Campo de texto da mensagem\r\nconst btnAdd = document.getElementById(\"btnAdd\");    // Botão \"Adicionar comunicação\"\r\nconst listaMensagens = document.getElementById(\"mensagens\"); // Área onde as mensagens serão exibidas\r\n\r\n// Evento que é disparado sempre que o usuário digita no textarea\r\ntextarea.addEventListener(\"input\", function () {\r\n    // Se o campo estiver vazio (ou só com espaços), desabilita o botão\r\n    btnAdd.disabled = textarea.value.trim() === \"\";\r\n});\r\n\r\n// Evento que é disparado quando o usuário clica no botão\r\nbtnAdd.addEventListener(\"click\", function () {\r\n    // Pega o texto digitado, removendo espaços extras no começo e fim\r\n    const texto = textarea.value.trim();\r\n\r\n    // Só adiciona a mensagem se o campo não estiver vazio\r\n    if (texto !== \"\") {\r\n        // Cria um novo elemento <div> para a nova mensagem\r\n        const novaMensagem = document.createElement(\"div\");\r\n\r\n        // Adiciona as classes Bootstrap que deixam o estilo igual ao exemplo\r\n        novaMensagem.classList.add(\"container\", \"border\", \"rounded\", \"m-0\", \"mb-2\");\r\n\r\n        // Define o conteúdo HTML da nova mensagem\r\n        novaMensagem.innerHTML = `\r\n            <b>--nome de usuario--</b>\r\n            <p class=\"mb-0 w-100\">${texto}</p>\r\n        `;\r\n\r\n        // Adiciona a nova mensagem no final da lista\r\n        listaMensagens.appendChild(novaMensagem);\r\n\r\n        // Limpa o campo de texto para o usuário digitar outra mensagem\r\n        textarea.value = \"\";\r\n\r\n        // Desabilita o botão novamente até que o usuário digite algo novo\r\n        btnAdd.disabled = true;\r\n    }\r\n});\r\n\r\n\r\n// -------------------------------\r\n// SOLICITAÇÃO DE PEÇAS (novo trecho)\r\n// -------------------------------\r\n\r\n// pega os elementos\r\nconst btnAdicionar = document.getElementById(\"btn-adicionar\");\r\nconst formPeca = document.getElementById(\"form-peca\");\r\nconst tabela = document.getElementById(\"tabela-pecas\");\r\n\r\n// quando clicar no botão, mostra o formulário\r\nif (btnAdicionar) {\r\n    btnAdicionar.addEventListener(\"click\", () => {\r\n        formPeca.style.display = \"block\"; // exibe o form\r\n        btnAdicionar.style.display = \"none\"; // esconde o botão\r\n    });\r\n}\r\n\r\n// quando enviar o formulário\r\nif (formPeca) {\r\n    formPeca.addEventListener(\"submit\", (event) => {\r\n        event.preventDefault(); // evita recarregar a página\r\n\r\n        // pega os valores digitados\r\n        const nome = document.getElementById(\"nome\").value;\r\n        const quantidade = document.getElementById(\"quantidade\").value;\r\n        const partnumber = document.getElementById(\"partnumber\").value;\r\n\r\n        // cria uma nova linha <tr>\r\n        const novaLinha = document.createElement(\"tr\");\r\n\r\n        // insere as células <td>\r\n        novaLinha.innerHTML = `\r\n            <td style=\"padding:8px;\">${nome}</td>\r\n            <td style=\"padding:8px;\">${quantidade}</td>\r\n            <td style=\"padding:8px;\">${partnumber}</td>\r\n        `;\r\n\r\n        // adiciona a linha na tabela\r\n        tabela.appendChild(novaLinha);\r\n\r\n        // limpa o formulário\r\n        formPeca.reset();\r\n\r\n        // esconde o formulário e mostra o botão de novo\r\n        formPeca.style.display = \"none\";\r\n        btnAdicionar.style.display = \"block\";\r\n    });\r\n}\r\n\r\n\r\n// -------------------------------\r\n// UPLOAD DE ARQUIVOS\r\n// -------------------------------\r\n\r\nconst btnArquivo = document.getElementById(\"btn-arquivo\");\r\nconst formArquivo = document.getElementById(\"form-arquivo\");\r\nconst tabelaArquivos = document.getElementById(\"tabela-arquivos\");\r\n\r\n// mostrar formulário\r\nbtnArquivo.addEventListener(\"click\", () => {\r\n    formArquivo.style.display = \"block\";\r\n    btnArquivo.style.display = \"none\";\r\n});\r\n\r\n// ao enviar o formulário\r\nformArquivo.addEventListener(\"submit\", (event) => {\r\n    event.preventDefault();\r\n\r\n    const fileInput = document.getElementById(\"fileInput\");\r\n    const descricao = document.getElementById(\"descricaoArquivo\").value.trim();\r\n\r\n    if (fileInput.files.length > 0 && descricao) {\r\n        const arquivo = fileInput.files[0]; // pega o arquivo enviado\r\n        const nomeArquivo = arquivo.name;\r\n\r\n        // cria uma URL temporária para permitir download\r\n        const urlDownload = URL.createObjectURL(arquivo);\r\n\r\n        // cria a nova linha da tabela\r\n        const novaLinha = document.createElement(\"tr\");\r\n        novaLinha.innerHTML = `\r\n            <td colspan=\"5\" style=\"padding:8px;\">${nomeArquivo}</td>\r\n            <td colspan=\"10\" style=\"padding:8px;\">${descricao}</td>\r\n            <td colspan=\"1\" style=\"padding:8px;\">\r\n            <a href=\"${urlDownload}\" download=\"${nomeArquivo}\" style=\"padding:8px;\">\r\n            ⬇️\r\n            </a>\r\n            </td>\r\n        `;\r\n\r\n        // adiciona na tabela\r\n        tabelaArquivos.appendChild(novaLinha);\r\n\r\n        // limpa e esconde formulário\r\n        formArquivo.reset();\r\n        formArquivo.style.display = \"none\";\r\n        btnArquivo.style.display = \"block\";\r\n    }\r\n});\r\n\r\n// -------------------------------\r\n// ASSINATURA CLIENTE COM VALIDAÇÃO, MODAL E DESABILITAÇÃO\r\n// -------------------------------\r\n\r\n// elementos do DOM\r\nconst btnAssCliente = document.getElementById(\"btn-ass-cliente\");\r\nconst btnAssCliente2 = document.getElementById(\"btn-ass-cliente2\");\r\nconst formCliente = document.getElementById(\"form-cliente\");\r\nconst btnSalvarCliente = document.getElementById(\"btn-salvar-cliente\");\r\nconst btnLimparCliente = document.getElementById(\"btn-limpar-cliente\");\r\nconst imgCliente = document.getElementById(\"img-cliente\");\r\n\r\nconst canvas = document.getElementById(\"canvas-cliente\");\r\nconst ctx = canvas.getContext(\"2d\");\r\n\r\n// configurar traço do canvas\r\nctx.lineWidth = 2;\r\nctx.lineCap = 'round';\r\nctx.strokeStyle = '#000';\r\n\r\nlet desenhando = false;\r\nlet assinaturaPendente = null; // guarda dados temporários\r\n\r\n// garantir que modal comece escondido ao carregar a página\r\nwindow.addEventListener(\"load\", () => {\r\n    const modal = document.getElementById(\"modal-confirmacao\");\r\n    if (modal) modal.style.display = \"none\";\r\n    assinaturaPendente = null;\r\n});\r\n\r\n// mostrar formulário ao clicar no botão\r\nbtnAssCliente.addEventListener(\"click\", () => {\r\n    formCliente.style.display = \"block\";\r\n    btnAssCliente.style.display = \"none\";\r\n});\r\n\r\n// iniciar desenho\r\ncanvas.addEventListener(\"mousedown\", iniciar);\r\ncanvas.addEventListener(\"touchstart\", iniciar);\r\n\r\nfunction iniciar(e) {\r\n    desenhando = true;\r\n    ctx.beginPath();\r\n    ctx.moveTo(getX(e), getY(e));\r\n    e.preventDefault();\r\n}\r\n\r\n// desenhar\r\ncanvas.addEventListener(\"mousemove\", desenhar);\r\ncanvas.addEventListener(\"touchmove\", desenhar);\r\n\r\nfunction desenhar(e) {\r\n    if (!desenhando) return;\r\n    ctx.lineTo(getX(e), getY(e));\r\n    ctx.stroke();\r\n    e.preventDefault();\r\n}\r\n\r\n// parar desenho\r\ncanvas.addEventListener(\"mouseup\", parar);\r\ncanvas.addEventListener(\"mouseleave\", parar);\r\ncanvas.addEventListener(\"touchend\", parar);\r\n\r\nfunction parar() { desenhando = false; }\r\n\r\n// pegar coordenadas do mouse ou touch\r\nfunction getX(e) {\r\n    if (e.touches) return e.touches[0].clientX - canvas.getBoundingClientRect().left;\r\n    return e.clientX - canvas.getBoundingClientRect().left;\r\n}\r\n\r\nfunction getY(e) {\r\n    if (e.touches) return e.touches[0].clientY - canvas.getBoundingClientRect().top;\r\n    return e.clientY - canvas.getBoundingClientRect().top;\r\n}\r\n\r\n// limpar canvas\r\nbtnLimparCliente.addEventListener(\"click\", () => {\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    document.getElementById(\"nomeCliente\").value = \"\";\r\n});\r\n\r\n// IDs dos campos obrigatórios\r\nconst camposObrigatorios = [\r\n    { id: \"problema\", label: \"Problema\" },\r\n    { id: \"realizado\", label: \"Serviço Realizado\" },\r\n    { id: \"sos_causa\", label: \"Causa SOS\" },\r\n    { id: \"sos_obs\", label: \"Observações SOS\" },\r\n    { id: \"obs_entrada\", label: \"Observações de Entrada\" },\r\n    { id: \"hora_entrada\", label: \"Hora de Entrada\" },\r\n    { id: \"hora_saida\", label: \"Hora de Saída\" },\r\n    { id: \"tempo_viagem\", label: \"Tempo de Viagem\" },\r\n    { id: \"kms_rodados\", label: \"KMs Rodados\" }\r\n];\r\n\r\n// modal\r\nconst modal = document.getElementById(\"modal-confirmacao\");\r\nconst modalTexto = document.getElementById(\"modal-texto\");\r\nconst modalCancelar = document.getElementById(\"modal-cancelar\");\r\nconst modalConfirmar = document.getElementById(\"modal-confirmar\");\r\n\r\nfunction abrirModal(camposVazios) {\r\n    let texto = \"Deseja confirmar assinatura?\";\r\n    if (camposVazios.length > 0) {\r\n        texto += \"<br>Os seguintes campos não foram preenchidos:<br><ul>\" +\r\n            camposVazios.map(c => `<li>${c}</li>`).join('') +\r\n            \"</ul>\";\r\n    }\r\n    modalTexto.innerHTML = texto;\r\n    modal.style.display = \"flex\";\r\n}\r\n\r\nfunction fecharModal() {\r\n    modal.style.display = \"none\";\r\n    assinaturaPendente = null;\r\n}\r\n\r\nmodalCancelar.addEventListener(\"click\", fecharModal);\r\n\r\nmodalConfirmar.addEventListener(\"click\", () => {\r\n    if (assinaturaPendente) {\r\n        salvarAssinatura(assinaturaPendente.nome, assinaturaPendente.dataURL);\r\n    }\r\n    fecharModal();\r\n});\r\n\r\n// clique no botão salvar assinatura\r\nbtnSalvarCliente.addEventListener(\"click\", () => {\r\n    const nome = document.getElementById(\"nomeCliente\").value.trim();\r\n    if (!nome) {\r\n        alert(\"Digite o nome do responsável!\");\r\n        return;\r\n    }\r\n\r\n    const camposVazios = camposObrigatorios\r\n        .filter(c => !document.getElementById(c.id).value.trim())\r\n        .map(c => c.label);\r\n\r\n    const dataURL = canvas.toDataURL();\r\n    assinaturaPendente = { nome, dataURL };\r\n\r\n    abrirModal(camposVazios); // abre modal, confirma ou cancela\r\n});\r\n\r\n// função que realmente salva assinatura\r\nfunction salvarAssinatura(nome, dataURL) {\r\n    imgCliente.src = dataURL;\r\n    imgCliente.alt = \"Assinatura de \" + nome;\r\n    imgCliente.style.display = \"block\";\r\n\r\n    let info = document.getElementById(\"info-ass-cliente\");\r\n    if (!info) {\r\n        info = document.createElement(\"div\");\r\n        info.id = \"info-ass-cliente\";\r\n        info.style.marginTop = \"5px\";\r\n        imgCliente.parentElement.appendChild(info);\r\n    }\r\n\r\n    const agora = new Date();\r\n    const dataHoraFormatada = agora.toLocaleString();\r\n    info.textContent = `Assinatura de ${nome} salva em ${dataHoraFormatada}`;\r\n\r\n    // esconder formulário e desabilitar botões de assinatura\r\n    formCliente.style.display = \"none\";\r\n    btnAssCliente.disabled = true;\r\n    btnAssCliente2.disabled = true;\r\n    btnAssCliente.style.display = \"none\";\r\n    btnAssCliente2.style.display = \"none\";\r\n\r\n    // DESABILITAR CAMPOS VERIFICADOS, mantendo os valores\r\n    camposObrigatorios.forEach(campo => {\r\n        const el = document.getElementById(campo.id);\r\n        if (el) el.disabled = true;\r\n    });\r\n\r\n    // DESABILITAR BOTÃO DE SALVAR OS\r\n    const btnSalvarOS = document.getElementById(\"salvar_os\");\r\n    if (btnSalvarOS) btnSalvarOS.disabled = true;\r\n}\r\n\r\n// -------------------------------\r\n// ASSINATURA TECNICO\r\n// -------------------------------\r\n\r\nconst btnAssTecnico = document.getElementById(\"btn-ass-tecnico\");\r\nconst btnAssTecnico2 = document.getElementById(\"btn-ass-tecnico2\");\r\nconst imgTecnico = document.getElementById(\"img-tecnico\");\r\n\r\nbtnAssTecnico.addEventListener(\"click\", () => {\r\n    // exibe a assinatura do técnico\r\n    imgTecnico.style.display = \"block\";\r\n\r\n     // cria ou atualiza o texto com data/hora\r\n    let infoTec = document.getElementById(\"info-ass-tecnico\");\r\n    if (!infoTec) {\r\n        infoTec = document.createElement(\"div\");\r\n        infoTec.id = \"info-ass-tecnico\";\r\n        infoTec.style.marginTop = \"5px\";\r\n        imgTecnico.parentElement.appendChild(infoTec);\r\n    }\r\n\r\n    const agora = new Date();\r\n    const dataHoraFormatada = agora.toLocaleString(); // ex: 27/08/2025 09:30:15\r\n    infoTec.textContent = `Assinatura do técnico registrada em ${dataHoraFormatada}`;\r\n\r\n    // opcional: desabilita o botão para não clicar novamente\r\n    btnAssTecnico.style.display = \"none\";\r\n    btnAssTecnico2.style.display = \"none\";\r\n});\r\n\r\n\r\n\r\n"],"names":["textarea","document","getElementById","btnAdd","listaMensagens","addEventListener","disabled","value","trim","texto","novaMensagem","createElement","classList","add","innerHTML","appendChild","btnAdicionar","formPeca","tabela","style","display","event","preventDefault","nome","quantidade","partnumber","novaLinha","reset","btnArquivo","formArquivo","tabelaArquivos","fileInput","descricao","files","length","arquivo","nomeArquivo","name","urlDownload","URL","createObjectURL","btnAssCliente","btnAssCliente2","formCliente","btnSalvarCliente","btnLimparCliente","imgCliente","canvas","ctx","getContext","lineWidth","lineCap","strokeStyle","desenhando","assinaturaPendente","iniciar","e","beginPath","moveTo","getX","getY","desenhar","lineTo","stroke","parar","touches","clientX","getBoundingClientRect","left","clientY","top","window","modal","clearRect","width","height","camposObrigatorios","id","label","modalTexto","modalCancelar","modalConfirmar","abrirModal","camposVazios","map","c","join","fecharModal","salvarAssinatura","dataURL","src","alt","info","marginTop","parentElement","dataHoraFormatada","agora","Date","toLocaleString","textContent","forEach","campo","el","btnSalvarOS","alert","filter","toDataURL","btnAssTecnico","btnAssTecnico2","imgTecnico","infoTec"],"version":3,"file":"project_SIVS.0c1de8f1.js.map"}